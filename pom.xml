<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>nenu.ists</groupId>
  <artifactId>manager</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>

  <modules>
    <module>manager-pojo</module>
    <module>manager-mapper</module>
    <module>manager-service</module>
    <module>manager-web</module>
  </modules>

  <!--对依赖的坐标的版本做集中管理-->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <junit.version>4.12</junit.version>
    <spring.version>5.3.0</spring.version>
    <mybatis.version>3.5.5</mybatis.version>
    <mybatis.spring.version>2.0.5</mybatis.spring.version>
    <mysql.version>8.0.20</mysql.version>
    <druid.version>1.2.4</druid.version>
    <jstl.version>1.2</jstl.version>
    <servlet.version>2.5</servlet.version>
    <jsp.version>2.0</jsp.version>
    <tomcat.version>2.2</tomcat.version>
  </properties>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!--mybatis-->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>${mybatis.spring.version}</version>
      </dependency>
      <!--mysql-->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>8.0.20</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
      </dependency>
      <!--spring-->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aspects</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!--jsp&servlet-->
      <dependency>
        <groupId>jstl</groupId>
        <artifactId>jstl</artifactId>
        <version>${jstl.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jsp-api</artifactId>
        <version>${jsp.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <!--配置资源拷贝插件-->
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>
    <!--配置 tomcat 插件-->
<!--    第一种方案
  是在父项目中使用pluginManagement配置tomcat，然后再在web子模块中配置tomcat.
  这样执行时，可以在父项目livecycle中打包，然后在web子项目使用tomcat7插件运行
-->
<!--    <pluginManagement>-->
<!--      <plugins>-->
<!--        <plugin>-->
<!--          <groupId>org.apache.tomcat.maven</groupId>-->
<!--          <artifactId>tomcat7-maven-plugin</artifactId>-->
<!--          <version>${tomcat.version}</version>-->
<!--        </plugin>-->
<!--      </plugins>-->
<!--    </pluginManagement>-->


<!--    第二种方案
  在父项目中直接配置tomcat。可以直接在父项目中使用tomcat7插件运行了。
  此方法比较简单。
-->
      <plugins>
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>${tomcat.version}</version>
          <configuration>
            <uriEncoding>UTF-8</uriEncoding>
            <path>/</path>
            <port>9090</port>
          </configuration>
        </plugin>
      </plugins>
  </build>
</project>

